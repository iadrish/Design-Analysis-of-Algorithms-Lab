PROBLEM STATEMENT:
FIND THE SECOND LARGEST AND THE SECOND SMALLEST NUMBER IN THE ARRAY USING DIVIDE & CONQUER ALGORITHM.

ALGORITHM:
DAC(a, i, j) { 
if(small(a, i, j)) 
return(Solution(a, i, j)) 
else m = divide(a, i, j) 
b = DAC(a, i, mid) 
c = DAC(a, mid+1, j) 
d = combine(b, c) 
return(d) 
}

CODE:
#include <stdio.h>
void Sort(int [], int, int, int);
void partition(int [],int, int);
int main()
{
 int list[50];
 int i, size;
 printf("Enter total number of elements:");
 scanf("%d", &size);
 printf("Enter the elements:\n");
 for(i = 0; i < size; i++)
 {
 scanf("%d", &list[i]);
 }
 partition(list, 0, size);
 printf("\n Second Smallest Element is : %d",list[2]) ;
 printf("\n Second Largest Element is : %d",list[size-1]) ;
 return 0;
}
void partition(int list[],int low,int high)
{
 int mid;
 if(low < high)
 {
 mid = (low + high) / 2;
 partition(list, low, mid);
 partition(list, mid + 1, high);
 Sort(list, low, mid, high);
 }
}
void Sort(int list[],int low,int mid,int high)
{
 int i, mi, k, lo, temp[50];
 lo = low;
 i = low;
 mi = mid + 1;
 while ((lo <= mid) && (mi <= high))
 {
 if (list[lo] <= list[mi])
 {
 temp[i] = list[lo];
 lo++;
 }
 else
 {
 temp[i] = list[mi];
 mi++;
 }
 i++;
 }
 if (lo > mid)
 {
 for (k = mi; k <= high; k++)
 {
 temp[i] = list[k];
 i++;
 }
 }
 else
 {
 for (k = lo; k <= mid; k++)
 {
 temp[i] = list[k];
 i++;
 }
 }
 for (k = low; k <= high; k++)
 {
 list[k] = temp[k];
 }
}

